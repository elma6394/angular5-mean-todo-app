MEAN APP USING ANGULAR 4 

(Yout tube link: https://www.youtube.com/watch?v=Tw-rskOmcMM&t=763s)

ng new mean-app

cd mean-app

We need to 'build' our project, we need to do this because our express server will look for a dist folder 
to serve the file.

So type "ng build"

We need to have node and express

npm install express body-parser --save

body-parser is used to parse the incoming request and bodies.

Create a file called server.js in root folder

server.js
---------

const express = require('express');
const bodyParser = require('body-parser');
const path = require('path');
const http = require('http');
const app = express();

//Api file for interacting with MongoDB
const api = require('./server/routes/api');

//Parser
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));

//Angular Dist o/p folder
app.use(express.static(path.join(__dirname, 'dist')));

//Api location
app.use('/api', api);

//Send all other request to the angular app
app.get('*', (req, res) => {
    res.sendFile(path.join(__dirname, 'dist/index.html'));
});

//Set port
const port = process.env.PORT || '3000';
app.set('port', port);

const server = http.createServer(app);
server.listen(port, () => console.log(`App running on localhost:${port}`))

----------

Go to terminal type "mongo"
Now type "use <dbname>"
Then "db.users.insert({"name":"sarun"})

This will insert the data.

Now run "show dbs"

Now go to terminal: npm i mongodb --save

Now create a server folder in root

server/routes/api.js
--------------------

const express = require('express');
const router = express.Router();
const MongoClient = require('mongodb').MongoClient;
const ObjectID = require('mongodb').ObjectID;

//Connect
const connection = (closure) => {
    return MongoClient.connect('mongodb://localhost:27017/mean4', (err, db) => {
        if (err) return console.log(err);
        closure(db);
    })
};

//Error handling
const sendError = (err, res) => {
    response.status = 501;
    response.message = typeof err == 'object' ? err.message : err;
    res.status(501).json(response);
};

//Response handling
let response = {
    status: 200,
    data: [],
    message: null
}

//Get users(read)
router.get('/users', (req, res) => {
    connection((db) => {
        db.collection('users')
            .find()
            .toArray()
            .then((users) => {
                response.data = users;
                res.json(response);
            })
            .catch((err) => {
                sendError(err, res);
            });
    });
});

module.exports = router;

Now running the app by: nodemon server

We can see the angular app running....

To see our users:
http://localhost:3000/api/users

-----------

Now we want to create a service to get this data on angular app:

Type: ng g service data (g for generate)

This will create the files inside src/app/data.service.ts etc

data.service.js
---------------

import { Injectable } from '@angular/core';
import { Http, Headers, RequestOptions } from '@angular/http';
import 'rxjs/add/operator/map';

@Injectable()
export class DataService {

  //Define a property result of any
  result:any;

  constructor(private http:Http) {}

  getUsers(){
    return this.http.get("/api/users")
    //this data is coming from response handling in server/routes/api.js
    .map(result => this.result = result.json().data)
  }

}

Now go to app.module.ts and import the modules